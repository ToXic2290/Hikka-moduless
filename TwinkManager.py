#               _             __  __           _       _
#     /\       | |           |  \/  |         | |     | |
#    /  \   ___| |_ _ __ ___ | \  / | ___   __| |_   _| | ___  ___
#   / /\ \ / __| __| '__/ _ \| |\/| |/ _ \ / _` | | | | |/ _ \/ __|
#  / ____ \\__ \ |_| | | (_) | |  | | (_) | (_| | |_| | |  __/\__ \
# /_/    \_\___/\__|_|  \___/|_|  |_|\___/ \__,_|\__,_|_|\___||___/
#
#               ¬© Copyright 2022
#
#      https://t.me/Den4ikSuperOstryyPer4ik
#                      and
#             https://t.me/ToXicUse
#
#       üîí Licensed under the GNU AGPLv3
#    https://www.gnu.org/licenses/agpl-3.0.html
# meta developer: @AstroModules

from .. import loader, utils
import time
from time import sleep

@loader.tds
class TwinkManagerMod(loader.Module):
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–≤–∏–Ω–∫–∞–º–∏ 

    Version: 0.0.1 ~beta"""

    strings = {
    	"name": "Twink-Manager",
    	"first_prefix": "–ü—Ä–µ—Ñ–∏–∫—Å –ø–µ—Ä–≤–æ–≥–æ —Ç–≤–∏–Ω–∫–∞",
    	"second_prefix": "–ü—Ä–µ—Ñ–∏–∫—Å –≤—Ç–æ—Ä–æ–≥–æ —Ç–≤–∏–Ω–∫–∞",
        "command_for_you": "–í—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å —Ç–∞–∫–∂–µ –∏ –Ω–∞ –≤–∞—à–µ–º –æ—Å–Ω–æ–≤–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ?"
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "1-prefix",
                "!",
                doc=lambda: self.strings("first_prefix"),
            ),
            loader.ConfigValue(
                "2-prefix",
                "None",
                doc=lambda: self.strings("second_prefix"),
            ),
            loader.ConfigValue(
                "all_accounts",
                False,
                doc=lambda: self.strings("command_for_you"),
                validator=loader.validators.Boolean(),
            ),
        )

    @loader.command()
    async def trestartcmd(self, message):
        """- –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã"""
        restart = "restart --force"
        prf1 = self.config['1-prefix']
        prf2 = self.config['2-prefix']
        MyAcc = self.config['you_account']
        if MyAcc == "False":
            if prf1 == "None":
                await message.edit("–í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == "None":
                await message.edit(f"{prf1}{restart}")
                sleep(0.5)
                await message.edit('üïò <em>–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö —Ç–≤–∏–Ω–∫–æ–≤...</em>')
            else:
                await message.edit(f"{prf1}{restart}")
                await message.edit(f"{prf2}{restart}")
                sleep(0.5)
                await message.edit('üïò <em>–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö —Ç–≤–∏–Ω–∫–æ–≤...</em>')

        else:
            if prf1 == "None":
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == "None":
                await message.edit(f"{prf1}{restart}")
                sleep(0.5)
                await self.allmodules.commands["restart"](
                    await utils.answer(message, f"{self.get_prefix()}{restart}")
                )
            else:
                await message.edit(f"{prf1}{restart}")
                await message.edit(f"{prf2}{restart}")
                sleep(0.5)
                await self.allmodules.commands["restart"](
                    await utils.answer(message, f"{self.get_prefix()}{restart}")
                )

    @loader.command()
    async def tpingcmd(self, message):
        """- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∏–Ω–≥ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö"""
        ping = "ping"
        prf1 = self.config['1-prefix']
        prf2 = self.config['2-prefix']
        MyAcc = self.config['you_account']
        if MyAcc == False:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{ping}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</em>')
            else:
                await message.edit(f"{prf1}{ping}")
                await message.edit(f"{prf2}{ping}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</em>')

        else:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{ping}")
                sleep(0.5)
                await self.allmodules.commands["ping"](
                    await utils.answer(message, f"{self.get_prefix()}{ping}")
                )
            else:
                await message.edit(f"{prf1}{ping}")
                await message.edit(f"{prf2}{ping}")
                sleep(0.5)
                await self.allmodules.commands["ping"](
                    await utils.answer(message, f"{self.get_prefix()}{ping}")
                )



    @loader.command()
    async def tupdatecmd(self, message):
        """- –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö"""
        update = "update --force"
        prf1 = self.config['1-prefix']
        prf2 = self.config['2-prefix']
        MyAcc = self.config['you_account']
        if MyAcc == False:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{update}")
                sleep(0.5)
                await message.edit('üïò <em>–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Hikka –Ω–∞ –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö...</em>')
            else:
                await message.edit(f"{prf1}{update}")
                await message.edit(f"{prf2}{update}")
                sleep(0.5)
                await message.edit('üïò <em>–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Hikka –Ω–∞ –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö...</em>')

        else:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{update}")
                sleep(0.5)
                await self.allmodules.commands["update"](
                    await utils.answer(message, f"{self.get_prefix()}{update}")
                )
            else:
                await message.edit(f"{prf1}{update}")
                await message.edit(f"{prf2}{update}")
                sleep(0.5)
                await self.allmodules.commands["update"](
                    await utils.answer(message, f"{self.get_prefix()}{update}")
                )



    @loader.command()
    async def thelpcmd(self, message):
        """- –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–∫–∏ –º–æ–¥—É–ª–µ–π –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö"""
        helpp = "help"
        prf1 = self.config['1-prefix']
        prf2 = self.config['2-prefix']
        MyAcc = self.config['you_account']
        if MyAcc == False:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{helpp}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–Ω</em>')
            else:
                await message.edit(f"{prf1}{helpp}")
                await message.edit(f"{prf2}{helpp}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–Ω</em>')

        else:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{helpp}")
                sleep(0.5)
                await self.allmodules.commands["help"](
                    await utils.answer(message, f"{self.get_prefix()}{helpp}")
                )
            else:
                await message.edit(f"{prf1}{helpp}")
                await message.edit(f"{prf2}{helpp}")
                sleep(0.5)
                await self.allmodules.commands["help"](
                    await utils.answer(message, f"{self.get_prefix()}{helpp}")
                )


    @loader.command()
    async def tterminalcmd(self, message):
        """- –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"""
        terminal = "terminal"
        args = utils.get_args_raw(message) 
        prf1 = self.config['1-prefix']
        prf2 = self.config['2-prefix']
        MyAcc = self.config['you_account']
        if MyAcc == False:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{terminal} {args}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞</em>')
            else:
                await message.edit(f"{prf1}{terminal} {args}")
                await message.edit(f"{prf2}{terminal} {args}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞</em>')
        else:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{terminal}")
                sleep(0.5)
                await self.allmodules.commands["terminal"](
                    await utils.answer(message, f"{self.get_prefix()}{terminal} {args}")
                )
            else:
                await message.edit(f"{prf1}{terminal} {args}")
                await message.edit(f"{prf2}{terminal} {args}")
                sleep(0.5)
                await self.allmodules.commands["terminal"](
                    await utils.answer(message, f"{self.get_prefix()}{terminal} {args}")
                )


    @loader.command()
    async def tdlmodcmd(self, message):
        """- –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ã"""
        dlmod = "dlmod"
        prf1 = self.config['1-prefix']
        prf2 = self.config['2-prefix']
        args = utils.get_args_raw(message)
        MyAcc = self.config['you_account']
        if MyAcc == False:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{dlmod} {args}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö</em>')
            else:
                await message.edit(f"{prf1}{dlmod} {args}")
                await message.edit(f"{prf2}{dlmod} {args}")
                sleep(0.5)
                await message.edit('‚úÖ <em>–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö</em>')
        else:
            if prf1 == None:
                await message.edit("‚ùóÔ∏è –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥")
            if prf2 == None:
                await message.edit(f"{prf1}{dlmod}")
                sleep(0.5)
                await self.allmodules.commands["dlmod"](
                    await utils.answer(message, f"{self.get_prefix()}{dlmod} {args}")
                )
            else:
                await message.edit(f"{prf1}{dlmod} {args}")
                await message.edit(f"{prf2}{dlmod} {args}")
                sleep(0.5)
                await self.allmodules.commands["dlmod"](
                    await utils.answer(message, f"{self.get_prefix()}{dlmod} {args}")
                )
